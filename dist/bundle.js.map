{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/main.ts","src/markov.ts","src/tokenizer.ts"],"names":[],"mappings":"AAAA;;;ACAA,0BAAwC;AACxC,uBAAkC;AAElC,IAAI,AAAS,YAAG,IAAI,YAAS,AAAE,AAAC;AAChC,IAAI,AAAM,SAAG,IAAI,SAAM,AAAE,AAAC;AAC1B,IAAI,AAAM,SAAG,AAAS,UAAC,AAAQ,SAAC,AAAoB,AAAC,AAAC;AACtD,IAAI,AAAM,SAAG,AAAM,OAAC,AAAO,QAAC,AAAM,AAAC,AAAC;AACpC,AAAO,QAAC,AAAG,IAAC,AAAM,AAAC,AAAC;;;ACPpB;;;;;;IACI,AAAO;;;;;;;gCAAC,AAAkB;AACtB,gBAAM,AAAG,MAAG,AAAE,AAAC;AACf,AAAG,AAAC,iBAAC,IAAI,AAAC,IAAG,AAAC,GAAE,AAAC,IAAG,AAAM,OAAC,AAAM,SAAG,AAAC,GAAE,AAAC,AAAE,KAAE,AAAC;AACzC,oBAAM,AAAK,QAAG,CAAC,AAAM,OAAC,AAAC,AAAC,IAAE,AAAM,OAAC,AAAC,IAAG,AAAC,AAAC,AAAC,AAAC;AACzC,AAAG,oBAAC,AAAI,KAAC,AAAK,AAAC,AAAC,AACpB;AAAC;AACD,AAAM,mBAAC,AAAG,AAAC,AACf;AAAC,AACJ;;;;;;AAGG,iBAAM;;;ACZV;;;;;;IACI,AAAQ;;;;;;;iCAAC,AAAW;AAChB,gBAAM,AAAG,MAAG,AAAM,AAAC;AACnB,AAAM,uBAAK,AAAK,MAAC,AAAG,AAAC,KAAC,AAAM;AAAC,AAAC,uBAAI,AAAC,EAAC,AAAI,AAAE,WAAK,AAAE,AAAC,AAAC,AACvD;aADW,AAAG;AACb,AACJ;;;;;;AAGG,oBAAS","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import { Tokenizer } from './tokenizer';\r\nimport { Markov } from './markov';\r\n\r\nvar tokenizer = new Tokenizer();\r\nvar markov = new Markov();\r\nvar tokens = tokenizer.tokenize('foo bar quux frotz');\r\nvar ngrams = markov.bigrams(tokens);\r\nconsole.log(ngrams);","class Markov {\r\n    bigrams(tokens: Array<any>) {\r\n        const res = [];\r\n        for (let i = 0; i < tokens.length - 1; i++) {\r\n            const ngram = [tokens[i], tokens[i + 1]];\r\n            res.push(ngram);\r\n        }\r\n        return res;\r\n    }\r\n}\r\n\r\nexport {\r\n    Markov\r\n}","class Tokenizer {\r\n    tokenize(src: string) {\r\n        const pat = /[\\s]/;\r\n        return src.split(pat).filter(x => x.trim() !== '');\r\n    }\r\n}\r\n\r\nexport {\r\n    Tokenizer\r\n}"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvbWFpbi50cyIsInNyYy9tYXJrb3YudHMiLCJzcmMvdG9rZW5pemVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7QUNBQSwwQkFBd0M7QUFDeEMsdUJBQWtDO0FBRWxDLElBQUksQUFBUyxZQUFHLElBQUksWUFBUyxBQUFFLEFBQUM7QUFDaEMsSUFBSSxBQUFNLFNBQUcsSUFBSSxTQUFNLEFBQUUsQUFBQztBQUMxQixJQUFJLEFBQU0sU0FBRyxBQUFTLFVBQUMsQUFBUSxTQUFDLEFBQW9CLEFBQUMsQUFBQztBQUN0RCxJQUFJLEFBQU0sU0FBRyxBQUFNLE9BQUMsQUFBTyxRQUFDLEFBQU0sQUFBQyxBQUFDO0FBQ3BDLEFBQU8sUUFBQyxBQUFHLElBQUMsQUFBTSxBQUFDLEFBQUM7OztBQ1BwQjs7Ozs7O0lBQ0ksQUFBTzs7Ozs7OztnQ0FBQyxBQUFrQjtBQUN0QixnQkFBTSxBQUFHLE1BQUcsQUFBRSxBQUFDO0FBQ2YsQUFBRyxBQUFDLGlCQUFDLElBQUksQUFBQyxJQUFHLEFBQUMsR0FBRSxBQUFDLElBQUcsQUFBTSxPQUFDLEFBQU0sU0FBRyxBQUFDLEdBQUUsQUFBQyxBQUFFLEtBQUUsQUFBQztBQUN6QyxvQkFBTSxBQUFLLFFBQUcsQ0FBQyxBQUFNLE9BQUMsQUFBQyxBQUFDLElBQUUsQUFBTSxPQUFDLEFBQUMsSUFBRyxBQUFDLEFBQUMsQUFBQyxBQUFDO0FBQ3pDLEFBQUcsb0JBQUMsQUFBSSxLQUFDLEFBQUssQUFBQyxBQUFDLEFBQ3BCO0FBQUM7QUFDRCxBQUFNLG1CQUFDLEFBQUcsQUFBQyxBQUNmO0FBQUMsQUFDSjs7Ozs7O0FBR0csaUJBQU07OztBQ1pWOzs7Ozs7SUFDSSxBQUFROzs7Ozs7O2lDQUFDLEFBQVc7QUFDaEIsZ0JBQU0sQUFBRyxNQUFHLEFBQU0sQUFBQztBQUNuQixBQUFNLHVCQUFLLEFBQUssTUFBQyxBQUFHLEFBQUMsS0FBQyxBQUFNO0FBQUMsQUFBQyx1QkFBSSxBQUFDLEVBQUMsQUFBSSxBQUFFLFdBQUssQUFBRSxBQUFDLEFBQUMsQUFDdkQ7YUFEVyxBQUFHO0FBQ2IsQUFDSjs7Ozs7O0FBR0csb0JBQVMiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiBlKHQsbixyKXtmdW5jdGlvbiBzKG8sdSl7aWYoIW5bb10pe2lmKCF0W29dKXt2YXIgYT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2lmKCF1JiZhKXJldHVybiBhKG8sITApO2lmKGkpcmV0dXJuIGkobywhMCk7dmFyIGY9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitvK1wiJ1wiKTt0aHJvdyBmLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsZn12YXIgbD1uW29dPXtleHBvcnRzOnt9fTt0W29dWzBdLmNhbGwobC5leHBvcnRzLGZ1bmN0aW9uKGUpe3ZhciBuPXRbb11bMV1bZV07cmV0dXJuIHMobj9uOmUpfSxsLGwuZXhwb3J0cyxlLHQsbixyKX1yZXR1cm4gbltvXS5leHBvcnRzfXZhciBpPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7Zm9yKHZhciBvPTA7bzxyLmxlbmd0aDtvKyspcyhyW29dKTtyZXR1cm4gc30pIiwiaW1wb3J0IHsgVG9rZW5pemVyIH0gZnJvbSAnLi90b2tlbml6ZXInO1xyXG5pbXBvcnQgeyBNYXJrb3YgfSBmcm9tICcuL21hcmtvdic7XHJcblxyXG52YXIgdG9rZW5pemVyID0gbmV3IFRva2VuaXplcigpO1xyXG52YXIgbWFya292ID0gbmV3IE1hcmtvdigpO1xyXG52YXIgdG9rZW5zID0gdG9rZW5pemVyLnRva2VuaXplKCdmb28gYmFyIHF1dXggZnJvdHonKTtcclxudmFyIG5ncmFtcyA9IG1hcmtvdi5iaWdyYW1zKHRva2Vucyk7XHJcbmNvbnNvbGUubG9nKG5ncmFtcyk7IiwiY2xhc3MgTWFya292IHtcclxuICAgIGJpZ3JhbXModG9rZW5zOiBBcnJheTxhbnk+KSB7XHJcbiAgICAgICAgY29uc3QgcmVzID0gW107XHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0b2tlbnMubGVuZ3RoIC0gMTsgaSsrKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IG5ncmFtID0gW3Rva2Vuc1tpXSwgdG9rZW5zW2kgKyAxXV07XHJcbiAgICAgICAgICAgIHJlcy5wdXNoKG5ncmFtKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHJlcztcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IHtcclxuICAgIE1hcmtvdlxyXG59IiwiY2xhc3MgVG9rZW5pemVyIHtcclxuICAgIHRva2VuaXplKHNyYzogc3RyaW5nKSB7XHJcbiAgICAgICAgY29uc3QgcGF0ID0gL1tcXHNdLztcclxuICAgICAgICByZXR1cm4gc3JjLnNwbGl0KHBhdCkuZmlsdGVyKHggPT4geC50cmltKCkgIT09ICcnKTtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IHtcclxuICAgIFRva2VuaXplclxyXG59Il19"}